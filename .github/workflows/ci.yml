# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [main]
  pull_request:
    branches: [main]

name: Main CI

env:
  NODE_VERSION: "16"

jobs:
  test:
    name: üöß Lint, Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Node.js dependencies
        run: |
          yarn install --frozen-lockfile --immutable --non-interactive --prefer-offline

      - name: üïµÔ∏è‚Äç‚ôÇÔ∏è  Lint
        run: |
          yarn lint

  build:
    name: üöß Build
    needs: [test]
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: "macos"
            arch: "x64"
            target: "@electron-forge/maker-zip"
          - runner: "windows"
            arch: "x64"
            target: "@electron-forge/maker-squirrel"
          - runner: "ubuntu"
            arch: "x64"
            target: "@electron-forge/maker-deb"
          - runner: "ubuntu"
            arch: "arm64"
            target: "@electron-forge/maker-deb"
          - runner: "ubuntu"
            arch: "armv7l"
            target: "@electron-forge/maker-deb"
    runs-on: ${{ matrix.runner }}-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Node.js dependencies
        run: |
          yarn install --frozen-lockfile --immutable --non-interactive --prefer-offline

      - name: üöß  Build Agent
        run: |
          yarn make --arch ${{ matrix.arch }} --targets "${{ matrix.target }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.runner }}-${{ matrix.arch }}
          if-no-files-found: error
          retention-days: 5
          path: out/make/**

  release:
    name: Create Release on Github and upload artifacts
    needs: [build]
    runs-on: [ubuntu-latest]
    if: startsWith(github.ref, 'refs/tags/')
    timeout-minutes: 15
    steps:
      - name: Download macos
        uses: actions/download-artifact@v3
        with:
          name: build-macos-x64
          path: .tmp

      - name: Download windows
        uses: actions/download-artifact@v3
        with:
          name: build-windows-x64
          path: .tmp

      - name: Download ubuntu x64
        uses: actions/download-artifact@v3
        with:
          name: build-ubuntu-x64
          path: .tmp

      - name: Download ubuntu arm64
        uses: actions/download-artifact@v3
        with:
          name: build-ubuntu-arm64
          path: .tmp

      - name: Download ubuntu armv7l
        uses: actions/download-artifact@v3
        with:
          name: build-ubuntu-armv7l
          path: .tmp

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          files: |
            ./.tmp/**/*.deb
            ./.tmp/**/*.zip
            ./.tmp/**/*.exe
